[{"path":"https://openscapes.github.io/kyber/articles/configuration.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Configuring Google Sheets and GitHub for Kyber","text":"main purpose Kyber automate common tasks need done start Openscapes Champions Cohort. level automation requires authorize computer Google Sheets GitHub.","code":""},{"path":"https://openscapes.github.io/kyber/articles/configuration.html","id":"configuring-google-sheets","dir":"Articles","previous_headings":"","what":"Configuring Google Sheets","title":"Configuring Google Sheets and GitHub for Kyber","text":"Kyber interacts Google Sheets via googlesheets4 package. package makes easy authorize computer Kyber can access Google Sheets programmatically. Run following code configure googlesheets4: function redirect web browser can log Google account. authorized googlesheets4, can confirm configured correctly running following: detailed information, see gs4_auth() documentation googlesheets4 authorization troubleshooting documentation.","code":"library(googlesheets4)  gs4_auth() gs4_user() #> Logged in to googlesheets4 as your-name@email.com."},{"path":"https://openscapes.github.io/kyber/articles/configuration.html","id":"troubelshooting-google-sheets","dir":"Articles","previous_headings":"Configuring Google Sheets","what":"Troubelshooting Google Sheets","title":"Configuring Google Sheets and GitHub for Kyber","text":"authorized computer use googlesheets4 may see following error: success troubleshooting error following method. First, try reading Google Sheet R: see following prompt: Enter 0 press Enter key. computer’s browser launch load Google’s authorization page. Reauthorize account via web browser see following message R console:","code":"The googlesheets4 package is requesting access to your Google account. Select a pre-authorised account or enter '0' to obtain a new token. Press Esc/Ctrl + C to cancel.  1: username@email.com  Selection: 1 Auto-refreshing stale OAuth token. Error in `gargle_abort_request_failed()`: ! Client error: (403) PERMISSION_DENIED ... library(googlesheets4)  cohort_registry_url <- \"https://docs.google.com/spreadsheets/sheet-url...\"  read_sheet(cohort_registry_url) Selection: Waiting for authentication in browser... Press Esc/Ctrl + C to abort Authentication complete."},{"path":"https://openscapes.github.io/kyber/articles/configuration.html","id":"configuring-git-and-github","dir":"Articles","previous_headings":"","what":"Configuring Git and GitHub","title":"Configuring Google Sheets and GitHub for Kyber","text":"One main purposes Kyber automate processes people normally “hand.” authorizing Kyber GitHub account, allowing Kyber act “” GitHub. 🚨 word caution: take care using Kyber functions interact GitHub. Kyber designed delete things GitHub Kyber, however determined use Kyber make big mess. going write code functions use Kyber, try avoid using Kyber within code designed iterate execute multiple commands. includes loops, mapping functions like sapply() purrr::map().","code":""},{"path":"https://openscapes.github.io/kyber/articles/configuration.html","id":"configuring-git","dir":"Articles","previous_headings":"Configuring Git and GitHub","what":"Configuring Git","title":"Configuring Google Sheets and GitHub for Kyber","text":"Make sure Git installed computer. need install Git can find instructions specific operating system online Git documentation GitHub guide.","code":""},{"path":"https://openscapes.github.io/kyber/articles/configuration.html","id":"configuring-github","dir":"Articles","previous_headings":"Configuring Git and GitHub","what":"Configuring GitHub","title":"Configuring Google Sheets and GitHub for Kyber","text":"get started configuring GitHub, first make sure GitHub account logged . Take note GitHub username choose email address use sign GitHub. installing Git, make sure install Gert package, Kyber uses interact Git. freshly installed Git, use Gert set GitHub username email address locally following code: Confirm configuration set correctly running: Now configured GitHub username email address Git, need use GitHub generate token Kyber use connect GitHub account. Keeping token private extremely important, since anyone token can act GitHub. ’s need save token however, just need copy paste R console . Run code , open web browser page GitHub appropriate settings token already selected. execute code , scroll bottom page click green “Generate token” button. token appear string 40 random alphanumeric characters start ghp_. Copy string GitHub running code . prompted enter token R console: Paste token R console press Enter, see: can check make sure credentials set running: Everything now configured start using Kyber.","code":"library(gert)  git_config_global_set(\"user.name\", \"[your GitHub username]\") git_config_global_set(\"user.email\", \"[the email you used to sign up for GitHub]\") git_config_global() library(usethis)  create_github_token(   scopes = c(\"repo\", \"user\", \"gist\", \"workflow\", \"admin:org\"),    description = paste0(\"kyber-\", Sys.Date()) ) #> • Call `gitcreds::gitcreds_set()` to register this token in the local Git credential store #>   It is also a great idea to store this token in any password-management software that you use #> • Open URL 'https://github.com/settings/tokens/new?scopes=repo,user,gist,workflow,admin:org&description=kyber-2024-04-19' library(gitcreds)  gitcreds_set() ? Enter password or token: -> Adding new credentials... -> Removing credentials from cache... -> Done. gitcreds_get() <gitcreds>   protocol: https   host    : github.com   username: PersonalAccessToken   password: <-- hidden -->"},{"path":"https://openscapes.github.io/kyber/articles/github-repo.html","id":"configure-github","dir":"Articles","previous_headings":"","what":"Configure GitHub","title":"Creating a Cohort-Specific GitHub Repository with Kyber","text":"Make sure computer configured according instructions vignette(\"configuration\"). Run following code see GitHub credentials set : credentials detected get result like:","code":"library(gitcreds) gitcreds_get() <gitcreds>   protocol: https   host    : github.com   username: PersonalAccessToken   password: <-- hidden -->"},{"path":"https://openscapes.github.io/kyber/articles/github-repo.html","id":"creating-the-repository","dir":"Articles","previous_headings":"","what":"Creating the Repository","title":"Creating a Cohort-Specific GitHub Repository with Kyber","text":"Champions Cohort GitHub repository. name repository match corresponding cohort_name Cohort Registry. init_repo() function code following: checks see GitHub repository trying create already exists. exist, result error. tries initialize GitHub repository computer. repository already exists path argument, result error. repository created GitHub. create local Git repository, add code conduct (via add_code_of_conduct()), add .gitignore file (via add_gitignore()), git add git commit files git push-ing files GitHub. Finally create README.Rmd file repository edit.","code":"library(kyber)   repo_name <- \"2021-ilm-rotj\"  repo_path <- init_repo(repo_name)"},{"path":[]},{"path":"https://openscapes.github.io/kyber/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sean Kross. Author, maintainer. Julia Lowndes. Author.","code":""},{"path":"https://openscapes.github.io/kyber/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kross S, Lowndes J (2024). kyber: Set Learning Cohorts GitHub. R package version 0.1.0, https://openscapes.github.io/kyber/.","code":"@Manual{,   title = {kyber: Set Up Learning Cohorts on GitHub},   author = {Sean Kross and Julia Lowndes},   year = {2024},   note = {R package version 0.1.0},   url = {https://openscapes.github.io/kyber/}, }"},{"path":[]},{"path":"https://openscapes.github.io/kyber/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Set Up Learning Cohorts on GitHub","text":"can install Kyber using remotes package:","code":"remotes::install_github(\"openscapes/kyber@main\")"},{"path":"https://openscapes.github.io/kyber/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Set Up Learning Cohorts on GitHub","text":"Kyber contains tools setting learning cohorts GitHub, purpose-built Openscapes Champions Program. init_repo() initializes local git repository new GitHub repository README.Rmd, code conduct, gitignore. create_github_clinic() creates files need teaching GitHub clinic. create_team() creates new team GitHub. add_team_members() adds members team GitHub based GitHub usernames. add_team_to_repo() adds team GitHub repository. call_agenda() creates agenda documents individual Cohort Call.","code":""},{"path":[]},{"path":"https://openscapes.github.io/kyber/index.html","id":"the-big-picture","dir":"","previous_headings":"Quick Cohort Setup","what":"The Big Picture","title":"Set Up Learning Cohorts on GitHub","text":"chronological steps creating Openscapes repos materials using Kyber detailed ReadMe. See flow chart understanding steps fit together, including requirements complete step. (Kyber flow chart pdf)","code":""},{"path":"https://openscapes.github.io/kyber/index.html","id":"configuration","dir":"","previous_headings":"Quick Cohort Setup","what":"Configuration","title":"Set Up Learning Cohorts on GitHub","text":"Using Kyber requires configuration R packages since Kyber functions automate processes GitHub normally hand. First, make sure googlesheets4 installed authorized computer read Google Sheets. Run following test configuration settings: creating GitHub Team adding usernames, Kyber requires set GitHub Personal Access Token scopes repo admin:org. See GitHub PAT documentation information generate PAT. can create PAT usethis::create_github_token() defaults, plus admin:org. Please make sure share PAT commit Git repository, since anyone PAT can act GitHub.","code":"library(googlesheets4)  cohort_registry_url <- \"https://docs.google.com/spreadsheets/d/1Ys9KiTXXmZ_laBoCV2QWEm7AcnGSVQaXvm2xpi4XTSc/\"  read_sheet(cohort_registry_url, sheet = \"test-sheet\") library(usethis) library(gitcreds)  create_github_token(   scopes = c(\"repo\", \"user\", \"gist\", \"workflow\", \"admin:org\") )  gitcreds_set()"},{"path":"https://openscapes.github.io/kyber/index.html","id":"example-workflow---champions-cohorts","dir":"","previous_headings":"","what":"Example Workflow - Champions Cohorts","title":"Set Up Learning Cohorts on GitHub","text":"workflow often happens 4 separate stages: create repo readme (pre-cohort) create agenda documents Cohort Call create github-clinic files (days GitHub Clinic Call 2) create github team add usernames (day Clinic, usernames)","code":""},{"path":"https://openscapes.github.io/kyber/index.html","id":"id_1-create-github-repo-with-readme","dir":"","previous_headings":"Example Workflow - Champions Cohorts","what":"1. Create GitHub repo with README","title":"Set Up Learning Cohorts on GitHub","text":"Creating repo creates local folder README.Rmd","code":"library(kyber)  library(rmarkdown) library(tibble) library(fs)  repo_name <- \"2021-ilm-rotj\"  # This will open a README.Rmd for you to edit # In yaml of README.Rmd, `cohort_name: \"Cohort\"` replace \"Cohort\" with specific cohort name repo_path <- init_repo(repo_name)  # Then render the README.Rmd to README.md render(path(repo_path, \"README.Rmd\"))  # We still need to work out the next part of the workflow and the extent to # which it should be automated, but I imagine something like: # # 1. Move README.Rmd out of this repository to another repository that perhaps  # only contains README.Rmds. # 2. Git add, commit, and push in the repo that only contains README.Rmds. # 3. Git add, commit, and push in this repository."},{"path":"https://openscapes.github.io/kyber/index.html","id":"id_2-create-agendas","dir":"","previous_headings":"Example Workflow - Champions Cohorts","what":"2. Create Agendas","title":"Set Up Learning Cohorts on GitHub","text":"Ensure cohort_metadata complete Cohort Registry sheet, including cohort_website, google_drive_folder cohort_name_long. appear Agendas. following suggestions aid next steps July 14, 2022: 2.1 Move agenda Google Docs RStudio, Knit (PreviewHTML) resulting agenda.md created code copy-paste result Google Doc (example: 03_CallAgenda [ 2022-noaa-afsc ]. might need expand knitted preview browser get copy/paste correctly Google Docs. Move Google Doc Openscapes Workspace folder Openscapes_CohortCalls [ year-cohort-name ]. 2.2 Formatting agenda Select (cmd-) change font Open Sans Make p1 opening text 9 point font (text horizontal line & Call title) Make Header 1 font 18, bold; update heading 1 match (see screenshot ; Stef notes “update heading match” working docs) Make Header 2 font 14, bold; update heading 2 match “add space” “remove space paragraph” throughout make spacing little cozy (yes seems odd undo, works) “add space” “remove space paragraph” throughout make spacing little cozy Review doc fix font weirdness Add page numbers “update heading 1 match”: (Stef notes working docs) Google Doc, update text style (headings, normal text, font type, size etc), highlight section style want, click styles dropdown shown screenshot, select e.g. “Update Heading 1 match”. Double check doc ’ve noticed missed agenda.","code":"library(kyber) library(googlesheets4)  kyber::call_agenda(     registry_url = \"https://docs.google.com/spreadsheets/d/1Ys9KiTXXmZ_laBoCV2QWEm7AcnGSVQaXvm2xpi4XTSc/edit#gid=942365997\",      cohort_id = \"2022-nasa-champions\",      call_number = 3)"},{"path":"https://openscapes.github.io/kyber/index.html","id":"id_3-github-clinic---generate-markdown-files-for-each-participant","dir":"","previous_headings":"Example Workflow - Champions Cohorts","what":"3. GitHub Clinic - Generate Markdown Files for Each Participant","title":"Set Up Learning Cohorts on GitHub","text":"haven’t already, clone Cohort Repo RStudio (File > New Project > Version Control > Git) , run following code. Detailed instructions looks like: Open cohort repo project RStudio create new script (temporary, ’ll deleted ’s nicer place work) Copy following script, delete examples “Erin, Julie”. ’ll keep _demo.md, ’ll demo live. Go ParticipantsList, copy 2 first last columns Back RStudio, put cursor inside “tribble” parentheses, , Addin menu top RStudio, select “Paste Tribble”! , double-check column headers - likely first last written kyber::short_names call. easiest thing update column names kyber::short_names code running (example: kyber::short_names(cohort$First.Name, cohort$Last.Name) ’ll now .md files participant cohort! duplicate names _LastInitial. Check clicking github-clinic folder opening file. Now, commit push Markdown files github-clinic folder plus `horst-champions-trailhead.png top-level folder GitHub.com. Don’t push .gitignore .rproj since ’re relevant Clinic. (can Command-select files unclick 2 don’t want).","code":"library(stringr) library(datapasta) # install.packages(\"datapasta\") library(kyber) ## remotes::install_github(\"openscapes/kyber\") library(here) library(fs)  ## use `datapasta` addin to vector_tribble these names formatted from the spreadsheet! cohort <- c(tibble::tribble(                       ~first,             ~last,                       \"_demo\",       \"\",                                             \"Erin\",        \"Robinson\",                       \"Julie\",         \"Lowndes\"                ) )  ## create .md files for each Champion kyber::short_names(cohort$first, cohort$last) |>    create_github_clinic(here())     ## copy trailhead image into parent folder trailhead_png <- system.file(\"kyber-templates\",                                 \"horst-champions-trailhead.png\", package = \"kyber\") fs::file_copy(trailhead_png, here())"},{"path":"https://openscapes.github.io/kyber/index.html","id":"id_4-github-clinic---create-github-team-add-usernames","dir":"","previous_headings":"Example Workflow - Champions Cohorts","what":"4. GitHub Clinic - Create GitHub team, add usernames","title":"Set Up Learning Cohorts on GitHub","text":"Open RStudio, create new script (temporary, ’ll deleted ’s nicer place work) Paste following review code. may already GitHub PAT set; information top README . Run code first -example usernames members variable check - Check example usernames added Cohort GitHub: go github.com/openscapes/cohort-name > Settings > Collaborators Teams team created username appears repo, woohoo! Open ParticipantList copy GitHub username column, including header. RStudio, put cursor members <- use datapasta Addin > Paste Tribble paste usernames members variable, deleting previous example user. pasting R script, rename header “username” (spaces asterices) Run following code check everyone added! Finally, ParticipantList, highlight usernames ’ve added green. helps us know else add live clinic session. Yay! Now highlight usernames green ParticipantList bookkeeping!","code":"## First make sure you have a GitHub PAT set. If you need one, here's what you'd do: # usethis::create_github_token() ## use their defaults plus `admin:org` # Sys.setenv(GITHUB_PAT = \"ghp_0id4zkO4GqSuEsC6Zs22wf34Y0u3270\")   library(kyber)  library(rmarkdown) library(tibble) library(fs) library(datapasta)  ## create naming for GitHub - do this once! repo_name <- \"2022-nasa-champions\" team_name <- paste0(repo_name, \"-cohort\") create_team(team_name, maintainers = \"jules32\", org = \"openscapes\")  ## create member variable - do this twice (first as test!) ## this is where you'll use datapasta and run everything below members <- tibble::tribble(      ~username,      \"eeholmes\"   )  add_team_members(team_name, members = members$username, org = \"openscapes\") add_team_to_repo(repo_name, team_name, org = \"openscapes\")"},{"path":"https://openscapes.github.io/kyber/index.html","id":"example-workflow---nasa-openscapes-2i2c-jupyterhub-access","dir":"","previous_headings":"","what":"Example Workflow - NASA Openscapes 2i2c JupyterHub Access","title":"Set Up Learning Cohorts on GitHub","text":"GitHub organization: https://github.com/nasa-openscapes-workshopsTeams: https://github.com/orgs/nasa-openscapes-workshops/teams","code":""},{"path":"https://openscapes.github.io/kyber/index.html","id":"add-nasa-openscapes-mentor-to-adminteam","dir":"","previous_headings":"Example Workflow - NASA Openscapes 2i2c JupyterHub Access","what":"Add NASA Openscapes Mentor to AdminTeam","title":"Set Up Learning Cohorts on GitHub","text":"NASA Openscapes Mentors given GitHub permissions administer access participants workshops. must Owner role AdminTeam. grant access Mentor, existing Owner GitHub Organization must add Mentor’s GitHub username AdminTeam, click name, take page within organization. Change role Owner, pulldown menu left side screen.","code":""},{"path":"https://openscapes.github.io/kyber/index.html","id":"add-users-to-nasa-openscapes-2i2c-jupyterhub-for-a-workshop","dir":"","previous_headings":"Example Workflow - NASA Openscapes 2i2c JupyterHub Access","what":"Add users to NASA Openscapes 2i2c JupyterHub for a workshop","title":"Set Up Learning Cohorts on GitHub","text":"Copy run code give users access NASA Openscapes 2i2c JupyterHub adding relevant GitHub Team","code":"library(kyber)  library(rmarkdown) library(tibble) library(fs) library(datapasta)  team_name <- \"WorkshopAccess-2i2c\"  ## for a long list of usernames, we can copy the list from a spreadsheet and use the datapasta Addin 'paste as tribble' and run everything below members <- tibble::tribble(   ~username,   \"virdi\",   \"alexishunzinger\" )  add_team_members(team_name, members = members$username, org = \"nasa-openscapes-workshops\")"},{"path":"https://openscapes.github.io/kyber/index.html","id":"r-package-developer-notes","dir":"","previous_headings":"","what":"R package developer notes","title":"Set Up Learning Cohorts on GitHub","text":"Steps edit kyber locally review edits: RStudio, open kyber project, pull main branch ’ve working RStudio, restart R session. Make edits files (example inst/agendas/team_culture.Rmd) R console: devtools::load_all() load local edits kyber R console, test whatever edited. example, create call agenda: review call agenda, open agenda.md, click Preview, view Viewer Tab. Usually can repeat steps 3-5 whenever make edits want review, however problems try restarting R session.","code":"kyber::call_agenda(     registry_url = \"https://docs.google.com/spreadsheets/d/1Ys9KiTXXmZ_laBoCV2QWEm7AcnGSVQaXvm2xpi4XTSc/edit#gid=942365997\",      cohort_id = \"2022-noaa-afsc-fall\",      call_number = 4)"},{"path":"https://openscapes.github.io/kyber/index.html","id":"contributing-to-kyber","dir":"","previous_headings":"","what":"Contributing to Kyber","title":"Set Up Learning Cohorts on GitHub","text":"contribute Kyber, fork repo, unchecking “Copy main branch ” box. Start working dev branch, create new branch like new-branch dev, submit Pull Requests dev. using Git command line workflow look like: clone fork kyber git checkout -b dev git pull origin dev start working new branch dev: git checkout -b new-branch dev add commit changes git push origin new-branch keep adding, committing, pushing, ’re ready open PR started using workflow [California Water Boards Openscapes]((https://cawaterboarddatacenter.github.io/swrcb-openscapes/) team began using Kyber create Agendas unique source Rmd files. example, Water Boards Cohort Calls 2 hours, default 1.5 hrs, lesson order different Openscapes Core Lessons, includes new lesson Documentation.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_code_of_conduct.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Code of Conduct to a directory. — add_code_of_conduct","title":"Add a Code of Conduct to a directory. — add_code_of_conduct","text":"Add Code Conduct directory.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_code_of_conduct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Code of Conduct to a directory. — add_code_of_conduct","text":"","code":"add_code_of_conduct(path = getwd())"},{"path":"https://openscapes.github.io/kyber/reference/add_code_of_conduct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Code of Conduct to a directory. — add_code_of_conduct","text":"path path directory code conduct file created.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_gitignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Add .gitignore to a directory. — add_gitignore","title":"Add .gitignore to a directory. — add_gitignore","text":"Add .gitignore directory.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_gitignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add .gitignore to a directory. — add_gitignore","text":"","code":"add_gitignore(path = getwd())"},{"path":"https://openscapes.github.io/kyber/reference/add_gitignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add .gitignore to a directory. — add_gitignore","text":"path path directory git ignore file created.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_repo_to_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a GitHub Repository to a Team — add_repo_to_team","title":"Add a GitHub Repository to a Team — add_repo_to_team","text":"Add GitHub Repository Team","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_repo_to_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a GitHub Repository to a Team — add_repo_to_team","text":"","code":"add_repo_to_team(repository, team, org = \"openscapes\")"},{"path":"https://openscapes.github.io/kyber/reference/add_repo_to_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a GitHub Repository to a Team — add_repo_to_team","text":"repository name GitHub repository. team name team. org GitHub organization owns team repository.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_repo_to_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a GitHub Repository to a Team — add_repo_to_team","text":"","code":"if (FALSE) {  kyber::add_repo_to_team(\"2021-ilm-rotj\", \"2021-ilm-rotj-team\") }"},{"path":"https://openscapes.github.io/kyber/reference/add_team_members.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GitHub Users to a Team — add_team_members","title":"Add GitHub Users to a Team — add_team_members","text":"Add GitHub Users Team","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_team_members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GitHub Users to a Team — add_team_members","text":"","code":"add_team_members(team, members, org = \"openscapes\")"},{"path":"https://openscapes.github.io/kyber/reference/add_team_members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GitHub Users to a Team — add_team_members","text":"team name team. members vector GitHub usernames. org GitHub organization owns team repository.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_team_members.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add GitHub Users to a Team — add_team_members","text":"","code":"if (FALSE) {  kyber::add_team_members(\"2021-ilm-rotj-team\", members = c(\"erinmr\", \"seankross\")) }"},{"path":"https://openscapes.github.io/kyber/reference/add_team_to_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a GitHub Team to a Repository — add_team_to_repo","title":"Add a GitHub Team to a Repository — add_team_to_repo","text":"Add GitHub Team Repository","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_team_to_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a GitHub Team to a Repository — add_team_to_repo","text":"","code":"add_team_to_repo(repository, team, org = \"openscapes\")"},{"path":"https://openscapes.github.io/kyber/reference/add_team_to_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a GitHub Team to a Repository — add_team_to_repo","text":"repository name GitHub repository. team name team. org GitHub organization owns team repository.","code":""},{"path":"https://openscapes.github.io/kyber/reference/add_team_to_repo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a GitHub Team to a Repository — add_team_to_repo","text":"","code":"if (FALSE) {  kyber::add_team_to_repo(\"2021-ilm-rotj\", \"2021-ilm-rotj-team\") }"},{"path":"https://openscapes.github.io/kyber/reference/call_agenda.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Call Agenda — call_agenda","title":"Create a Call Agenda — call_agenda","text":"Create Call Agenda","code":""},{"path":"https://openscapes.github.io/kyber/reference/call_agenda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Call Agenda — call_agenda","text":"","code":"call_agenda(   registry_url,   cohort_id,   call_number,   cohort_sheet = \"cohort_metadata\",   call_sheet = \"call_metadata\",   website = paste0(\"https://openscapes.github.io/\", cohort_id),   output_format = md_agenda(),   output_file = \"agenda.md\" )"},{"path":"https://openscapes.github.io/kyber/reference/call_agenda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Call Agenda — call_agenda","text":"registry_url URL cohort registry. cohort_id ID cohort. call_number call number agenda. cohort_sheet sheet registry cohort information. call_sheet sheet registry information individual calls. website website cohort. output_format output format agenda. output_file name output file file extension.","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_github_clinic.html","id":null,"dir":"Reference","previous_headings":"","what":"Create GitHub Clinic Files — create_github_clinic","title":"Create GitHub Clinic Files — create_github_clinic","text":"Create GitHub Clinic Files","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_github_clinic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create GitHub Clinic Files — create_github_clinic","text":"","code":"create_github_clinic(names, path = getwd())"},{"path":"https://openscapes.github.io/kyber/reference/create_github_clinic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create GitHub Clinic Files — create_github_clinic","text":"names vector names markdown files created. .md extension added automatically. path Path directory github-clinic created.","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_github_clinic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create GitHub Clinic Files — create_github_clinic","text":"","code":"if (FALSE) {  create_github_clinic(names = c(\"julia\", \"erin\"))  file.exists(\"github-clinic\") #> TRUE  list.files(\"github-clinic\") #> \"erin.md\"  \"julia.md\" }"},{"path":"https://openscapes.github.io/kyber/reference/create_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a README.Rmd from a Kyber Template — create_readme","title":"Create a README.Rmd from a Kyber Template — create_readme","text":"Create README.Rmd Kyber Template","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a README.Rmd from a Kyber Template — create_readme","text":"","code":"create_readme(   file = \"README.Rmd\",   template = \"openscapes-cohort-readme\",   edit = TRUE )"},{"path":"https://openscapes.github.io/kyber/reference/create_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a README.Rmd from a Kyber Template — create_readme","text":"file File name draft template Template use basis draft. either full path template directory name template directory within rmarkdown/templates directory package. edit TRUE edit template immediately","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_readme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a README.Rmd from a Kyber Template — create_readme","text":"Valid values template argument include \"openscapes-cohort-readme\".","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a README.Rmd from a Kyber Template — create_readme","text":"","code":"if (FALSE) {  kyber::create_readme() }"},{"path":"https://openscapes.github.io/kyber/reference/create_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GitHub repository with a README.Rmd — create_repo","title":"Create a GitHub repository with a README.Rmd — create_repo","text":"Create GitHub repository README.Rmd","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GitHub repository with a README.Rmd — create_repo","text":"","code":"create_repo(   name,   org = \"openscapes\",   path = getwd(),   template = \"openscapes-cohort-readme\",   edit = TRUE )"},{"path":"https://openscapes.github.io/kyber/reference/create_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GitHub repository with a README.Rmd — create_repo","text":"name name repository. org GitHub organization repository. path path directory repository created. template Template use basis draft. either full path template directory name template directory within rmarkdown/templates directory package. edit TRUE edit template immediately","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_repo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a GitHub repository with a README.Rmd — create_repo","text":"Valid values template argument include \"openscapes-cohort-readme\", FALSE want create repository README.md.","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_repo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a GitHub repository with a README.Rmd — create_repo","text":"","code":"if (FALSE) {  kyber::create_repo(\"2021-ilm-rotj\") }"},{"path":"https://openscapes.github.io/kyber/reference/create_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Team on GitHub for an Organization — create_team","title":"Create a Team on GitHub for an Organization — create_team","text":"Create Team GitHub Organization","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Team on GitHub for an Organization — create_team","text":"","code":"create_team(name, maintainers, org = \"openscapes\", visible = TRUE)"},{"path":"https://openscapes.github.io/kyber/reference/create_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Team on GitHub for an Organization — create_team","text":"name name team. maintainers One GitHub usernames team maintainers. org GitHub organization team. visible team visible every member organization?","code":""},{"path":"https://openscapes.github.io/kyber/reference/create_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Team on GitHub for an Organization — create_team","text":"","code":"if (FALSE) {  # One maintainer kyber::create_team(\"2021-ilm-rotj-team\", maintainers = \"jules32\")  # Multiple maintainers kyber::create_team(\"2021-ilm-rotj-team\", maintainers = c(\"jules32\", \"seankross\")) }"},{"path":"https://openscapes.github.io/kyber/reference/formatting.html","id":null,"dir":"Reference","previous_headings":"","what":"Readme Formatting — formatting","title":"Readme Formatting — formatting","text":"Functions help format yaml data nicely Readme templates.","code":""},{"path":"https://openscapes.github.io/kyber/reference/formatting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Readme Formatting — formatting","text":"","code":"ky_fmt_wiki_link(link)  ky_fmt_schedule(schedule)"},{"path":"https://openscapes.github.io/kyber/reference/formatting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Readme Formatting — formatting","text":"link url online wiki. schedule list data frames combined, row-wise.","code":""},{"path":"https://openscapes.github.io/kyber/reference/init_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a GitHub repository with a README.Rmd — init_repo","title":"Initialize a GitHub repository with a README.Rmd — init_repo","text":"Initialize GitHub repository README.Rmd","code":""},{"path":"https://openscapes.github.io/kyber/reference/init_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a GitHub repository with a README.Rmd — init_repo","text":"","code":"init_repo(   name,   org = \"openscapes\",   path = getwd(),   template = \"openscapes-cohort-readme\",   edit = TRUE )"},{"path":"https://openscapes.github.io/kyber/reference/init_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a GitHub repository with a README.Rmd — init_repo","text":"name name GitHub repository. org GitHub organization repository. path path directory repository initialized. template Template use basis draft. either full path template directory name template directory within rmarkdown/templates directory package. edit TRUE edit template immediately","code":""},{"path":"https://openscapes.github.io/kyber/reference/init_repo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize a GitHub repository with a README.Rmd — init_repo","text":"Valid values template argument include \"openscapes-cohort-readme\", FALSE want create repository README.md.","code":""},{"path":"https://openscapes.github.io/kyber/reference/init_repo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a GitHub repository with a README.Rmd — init_repo","text":"","code":"if (FALSE) {  kyber::init_repo(\"2021-ilm-rotj\") }"},{"path":"https://openscapes.github.io/kyber/reference/ky_add_repo_to_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a GitHub Repository to a Team — ky_add_repo_to_team","title":"Add a GitHub Repository to a Team — ky_add_repo_to_team","text":"Add GitHub Repository Team","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_add_repo_to_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a GitHub Repository to a Team — ky_add_repo_to_team","text":"","code":"ky_add_repo_to_team(repository, team, org = \"openscapes\")"},{"path":"https://openscapes.github.io/kyber/reference/ky_add_repo_to_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a GitHub Repository to a Team — ky_add_repo_to_team","text":"repository name GitHub repository. team name team. org GitHub organization owns team repository.","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_add_repo_to_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a GitHub Repository to a Team — ky_add_repo_to_team","text":"","code":"if (FALSE) {  kyber::ky_add_repo_to_team(\"2021-ilm-rotj\", \"2021-ilm-rotj-team\") }"},{"path":"https://openscapes.github.io/kyber/reference/ky_add_team_members.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GitHub Users to a Team — ky_add_team_members","title":"Add GitHub Users to a Team — ky_add_team_members","text":"Add GitHub Users Team","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_add_team_members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GitHub Users to a Team — ky_add_team_members","text":"","code":"ky_add_team_members(team, members, org = \"openscapes\")"},{"path":"https://openscapes.github.io/kyber/reference/ky_add_team_members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GitHub Users to a Team — ky_add_team_members","text":"team name team. members vector GitHub usernames. org GitHub organization owns team repository.","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_add_team_members.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add GitHub Users to a Team — ky_add_team_members","text":"","code":"if (FALSE) {  kyber::ky_add_team_members(\"2021-ilm-rotj-team\", members = c(\"erinmr\", \"seankross\")) }"},{"path":"https://openscapes.github.io/kyber/reference/ky_create_github_clinic.html","id":null,"dir":"Reference","previous_headings":"","what":"Create GitHub Clinic Files — ky_create_github_clinic","title":"Create GitHub Clinic Files — ky_create_github_clinic","text":"Create GitHub Clinic Files","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_create_github_clinic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create GitHub Clinic Files — ky_create_github_clinic","text":"","code":"ky_create_github_clinic(names, path = getwd())"},{"path":"https://openscapes.github.io/kyber/reference/ky_create_github_clinic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create GitHub Clinic Files — ky_create_github_clinic","text":"names vector names markdown files created. .md extension added automatically. path Path directory github-clinic created.","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_create_github_clinic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create GitHub Clinic Files — ky_create_github_clinic","text":"","code":"if (FALSE) {  ky_create_github_clinic(names = c(\"julia\", \"erin\"))  file.exists(\"github-clinic\") #> TRUE  list.files(\"github-clinic\") #> \"erin.md\"  \"julia.md\" }"},{"path":"https://openscapes.github.io/kyber/reference/ky_create_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Team on GitHub for an Organization — ky_create_team","title":"Create a Team on GitHub for an Organization — ky_create_team","text":"Create Team GitHub Organization","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_create_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Team on GitHub for an Organization — ky_create_team","text":"","code":"ky_create_team(name, maintainers, org = \"openscapes\", visible = TRUE)"},{"path":"https://openscapes.github.io/kyber/reference/ky_create_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Team on GitHub for an Organization — ky_create_team","text":"name name team. maintainers One GitHub usernames team maintainers. org GitHub organization team. visible team visible every member organization?","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_create_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Team on GitHub for an Organization — ky_create_team","text":"","code":"if (FALSE) {  # One maintainer kyber::ky_create_team(\"2021-ilm-rotj-team\", maintainers = \"jules32\")  # Multiple maintainers kyber::ky_create_team(\"2021-ilm-rotj-team\", maintainers = c(\"jules32\", \"seankross\")) }"},{"path":"https://openscapes.github.io/kyber/reference/ky_short_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Make unique combinations of first and last names — ky_short_names","title":"Make unique combinations of first and last names — ky_short_names","text":"Make unique combinations first last names","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_short_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make unique combinations of first and last names — ky_short_names","text":"","code":"ky_short_names(first, last)"},{"path":"https://openscapes.github.io/kyber/reference/ky_short_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make unique combinations of first and last names — ky_short_names","text":"first vector first names. last vector last names.","code":""},{"path":"https://openscapes.github.io/kyber/reference/ky_short_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make unique combinations of first and last names — ky_short_names","text":"","code":"if (FALSE) {  first <- c(\"a\", \"b\", \"c\") last <- c(\"x1\", \"y2\", \"z3\") ky_short_names(first, last) #> \"a\" \"b\" \"c\"  first <- c(\"a\", \"a\", \"c\") last <- c(\"x1\", \"y2\", \"z3\") ky_short_names(first, last) #> \"a_x\" \"a_y\" \"c\"  first <- c(\"a\", \"a\", \"c\") last <- c(\"x144\", \"x255\", \"z3\") ky_short_names(first, last) #> \"a_x144\" \"a_x255\" \"c\"  first <- c(\"a\", \"a\", \"c\", \"d\", \"d\") last <- c(\"x144\", \"x255\", \"z3\", \"r4\", \"t5\") ky_short_names(first, last) #> \"a_x144\" \"a_x255\" \"c\"      \"d_r\"    \"d_t\"  first <- c(\"a\", \"a\", \"c\") last <- c(\"x1\", \"x1\", \"z3\") ky_short_names(first, last) #> \"a_x1\" \"c\" #> Warning message: #> In ky_short_names(first, last) : #> First and Last pairs are not unique. Returning only unique combinations. }"},{"path":"https://openscapes.github.io/kyber/reference/kyber_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the paths to files installed with kyber — kyber_file","title":"Get the paths to files installed with kyber — kyber_file","text":"function allows quickly access files installed kyber.","code":""},{"path":"https://openscapes.github.io/kyber/reference/kyber_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the paths to files installed with kyber — kyber_file","text":"","code":"kyber_file(path = NULL)"},{"path":"https://openscapes.github.io/kyber/reference/kyber_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the paths to files installed with kyber — kyber_file","text":"path name file. argument provided example files listed.","code":""},{"path":"https://openscapes.github.io/kyber/reference/kyber_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the paths to files installed with kyber — kyber_file","text":"vector file paths","code":""},{"path":"https://openscapes.github.io/kyber/reference/kyber_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the paths to files installed with kyber — kyber_file","text":"","code":"kyber_file(\"_opening.Rmd\") #> [1] \"/private/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/RtmpcDFWqQ/temp_libpathc2d2f6ffca/kyber/agendas/_opening.Rmd\""},{"path":"https://openscapes.github.io/kyber/reference/md_agenda.html","id":null,"dir":"Reference","previous_headings":"","what":"Options for creating an agenda in Markdown — md_agenda","title":"Options for creating an agenda in Markdown — md_agenda","text":"Options creating agenda Markdown","code":""},{"path":"https://openscapes.github.io/kyber/reference/md_agenda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Options for creating an agenda in Markdown — md_agenda","text":"","code":"md_agenda()"},{"path":"https://openscapes.github.io/kyber/reference/md_agenda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Options for creating an agenda in Markdown — md_agenda","text":"list options.","code":""},{"path":"https://openscapes.github.io/kyber/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://openscapes.github.io/kyber/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://openscapes.github.io/kyber/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://openscapes.github.io/kyber/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://openscapes.github.io/kyber/reference/short_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Make unique combinations of first and last names — short_names","title":"Make unique combinations of first and last names — short_names","text":"Make unique combinations first last names","code":""},{"path":"https://openscapes.github.io/kyber/reference/short_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make unique combinations of first and last names — short_names","text":"","code":"short_names(first, last)"},{"path":"https://openscapes.github.io/kyber/reference/short_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make unique combinations of first and last names — short_names","text":"first vector first names. last vector last names.","code":""},{"path":"https://openscapes.github.io/kyber/reference/short_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make unique combinations of first and last names — short_names","text":"","code":"if (FALSE) {  first <- c(\"a\", \"b\", \"c\") last <- c(\"x1\", \"y2\", \"z3\") short_names(first, last) #> \"a\" \"b\" \"c\"  first <- c(\"a\", \"a\", \"c\") last <- c(\"x1\", \"y2\", \"z3\") short_names(first, last) #> \"a_x\" \"a_y\" \"c\"  first <- c(\"a\", \"a\", \"c\") last <- c(\"x144\", \"x255\", \"z3\") short_names(first, last) #> \"a_x144\" \"a_x255\" \"c\"  first <- c(\"a\", \"a\", \"c\", \"d\", \"d\") last <- c(\"x144\", \"x255\", \"z3\", \"r4\", \"t5\") short_names(first, last) #> \"a_x144\" \"a_x255\" \"c\"      \"d_r\"    \"d_t\"  first <- c(\"a\", \"a\", \"c\") last <- c(\"x1\", \"x1\", \"z3\") short_names(first, last) #> \"a_x1\" \"c\" #> Warning message: #> In ky_short_names(first, last) : #> First and Last pairs are not unique. Returning only unique combinations. }"}]
